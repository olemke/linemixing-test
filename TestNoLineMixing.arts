#DEFINITIONS:  -*-sh-*-
#
# Demonstration and test of simple ARTS 1D, 2D and 3D clear sky calculations.
#
# Observations from a satellite is treated, with three viewing directions:
#   1: Cold space (ie. above the model atmosphere)
#   2: Limb sounding
#   3: Downward observation.
#
# For the test sequence (ie. "make check") this is a first test on that the
# full chain around yCalc is working. Calculation of optical depth as an
# auxilary variable is included and tested.
#
# Author: Patrick Eriksson


Arts2 {

INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/planet_earth.arts"

# Agenda for scalar gas absorption calculation
Copy(abs_xsec_agenda, abs_xsec_agenda__noCIA)

# (standard) emission calculation
Copy( iy_main_agenda, iy_main_agenda__Emission )

# cosmic background radiation
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )

# standard surface agenda (i.e., make use of surface_rtprop_agenda)
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )

# Lookup absorption
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )

# sensor-only path
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )

# no refraction
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )

ReadXML(partition_functions,"spectroscopy/PartitionSums/TIPS/tips.xml")

# Number of Stokes components to be computed
#
IndexSet( stokes_dim, 1 )

# No jacobian calculation
#
jacobianOff

# Clearsky = No scattering
#
cloudboxOff

# Definition of species
# ---
abs_speciesSet( species=
            ["H2O, H2O-SelfContCKDMT252, H2O-ForeignContCKDMT252",
             "N2, N2-CIArotCKDMT252, N2-CIAfunCKDMT252",
             "O3",
             "O2, O2-CIAfunCKDMT100",
             "CO2, CO2-CKDMT252"
            ] )

#abs_linesReadFromHitran(filename="HITRAN2012.par",
abs_linesReadFromLBLRTM(filename="aer_v_3.6",
#abs_linesReadFromArts(filename="convert/aer_arts.xml",
                        fmin=0,
                        fmax=10000e12)
VectorNLinSpace( f_grid, 1000, 12e12, 24e12 )
WriteXML("ascii", f_grid, "f_grid.xml")



# Sort the line file according to species
# ---
abs_lines_per_speciesCreateFromLines

abs_lineshape_per_tgDefine(
abs_species=abs_species,
shape=[
"Voigt_Kuntz6", "Voigt_Kuntz6", "Voigt_Kuntz6", "Voigt_Kuntz6", "Voigt_Kuntz6"
],
normalizationfactor=[
"VVH",          "VVH",          "VVH",          "VVH",          "VVH"
],
cutoff=[
750e9,          750e9,          750e9,          750e9,          750e9
]
)


# Atmospheric scenario
# ---
AtmRawRead( basename = "testdata/tropical" )
# A pressure grid rougly matching 0 to 80 km, in steps of 2 km.
# ---
#VectorNLogSpace( p_grid, 41, 1000e2, 1 )
p_gridFromZRaw( p_grid, z_field_raw,0 )



# Weakly reflecting surface
# ---
VectorSetConstant( surface_scalar_reflectivity, 1, 0 )
Copy( surface_rtprop_agenda,
      surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_surface )

# No sensor properties
# ---
sensorOff


StringSet( iy_unit, "1" )

# Atmosphere and surface
# ---
AtmosphereSet1D
AtmFieldsCalc
Extract( z_surface, z_field, 0 )
Extract( t_surface, t_field, 0 )

# Definition of sensor position and LOS
# ---
MatrixSetConstant( sensor_pos, 1, 1, 600e3 )
MatrixSet( sensor_los, [ 180 ] )

abs_xsec_agenda_checkedCalc
atmfields_checkedCalc
abs_lookupSetup
abs_lookupCalc
WriteXML("binary", abs_lookup, "abs_lookup.xml")
# Perform RT calculations
# ---
abs_xsec_agenda_checkedCalc
propmat_clearsky_agenda_checkedCalc
atmfields_checkedCalc
atmgeom_checkedCalc
cloudbox_checkedCalc
sensor_checkedCalc
yCalc
WriteXML("ascii", y, "y.xml")
} # End of Main
 
